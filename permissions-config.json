{
  "metadata": {
    "generated": "2025-08-25",
    "phase": "Phase 3.1 - Simplified API Token Configuration",
    "purpose": "Streamlined API access configuration using full access token from .env",
    "last_updated": "2025-08-25"
  },
  "authentication_strategy": {
    "current_approach": "Full Access API Token",
    "description": "Using a single full access API token stored securely in .env file for all API interactions",
    "benefits": [
      "Simplified authentication flow",
      "Reduced complexity in API calls", 
      "Consistent access across all content types",
      "Easier maintenance and deployment"
    ],
    "token_location": ".env file (STRAPI_API_TOKEN)",
    "security_note": "Token provides full access - ensure .env is never committed to version control"
  },
  "api_configuration": {
    "primary_token": {
      "name": "STRAPI_API_TOKEN",
      "type": "full-access",
      "description": "Primary API token for all content operations",
      "permissions": {
        "content_types": "ALL",
        "operations": ["find", "findOne", "create", "update", "delete"],
        "media": "full_access",
        "duration": "unlimited"
      },
      "usage": {
        "static_generation": true,
        "dynamic_requests": true,
        "content_management": true,
        "media_operations": true
      }
    }
  },
  "simplified_content_access": {
    "all_content_types": {
      "partners": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"],
        "media": "included"
      },
      "products": {
        "access": "full", 
        "operations": ["find", "findOne", "create", "update", "delete"],
        "media": "included"
      },
      "blog-posts": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"],
        "media": "included"
      },
      "team-members": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"],
        "media": "included"
      },
      "categories": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"]
      },
      "blog-categories": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"]
      },
      "tags": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"]
      },
      "company-info": {
        "access": "full",
        "operations": ["find", "findOne", "create", "update", "delete"]
      }
    }
  },
  "implementation_notes": {
    "api_calls": {
      "headers": {
        "Authorization": "Bearer ${STRAPI_API_TOKEN}",
        "Content-Type": "application/json"
      },
      "base_url": "${STRAPI_API_URL}",
      "example": "Authorization: Bearer ${process.env.STRAPI_API_TOKEN}"
    },
    "error_handling": {
      "token_missing": "Ensure STRAPI_API_TOKEN is set in .env file",
      "token_invalid": "Verify token is valid and has not expired",
      "permissions_denied": "Full access token should have all permissions - check Strapi admin panel"
    }
  },
  "public_access_configuration": {
    "frontend_public_access": {
      "description": "Content served to website visitors (via Next.js with token)",
      "content_types": [
        "partners", "products", "blog-posts", "team-members",
        "categories", "blog-categories", "tags", "company-info"
      ],
      "operations": ["find", "findOne"],
      "media_access": "read_only",
      "note": "All public content is fetched server-side using the full access token"
    }
  },
  "content_security": {
    "draft_and_publish": {
      "enabled_for": [
        "partners", "products", "blog-posts", "team-members",
        "categories", "blog-categories", "tags", "company-info"
      ],
      "workflow": {
        "draft": "Content can be saved as drafts",
        "publish": "Published content appears on frontend",
        "unpublish": "Content can be unpublished when needed"
      }
    },
    "audit_logging": {
      "enabled": true,
      "events": ["create", "update", "delete", "publish", "unpublish"],
      "retention": "90 days"
    }
  },
  "rate_limiting": {
    "api_with_token": {
      "requests_per_minute": 300,
      "requests_per_hour": 10000,
      "burst_limit": 50,
      "note": "High limits since using authenticated token"
    },
    "static_generation": {
      "requests_per_minute": 1000,
      "requests_per_hour": 50000,
      "burst_limit": 100,
      "note": "Higher limits for build-time data fetching"
    }
  },
  "cors_configuration": {
    "allowed_origins": [
      "http://localhost:3000",
      "http://localhost:1337",
      "https://your-production-domain.com",
      "https://your-staging-domain.com"
    ],
    "allowed_methods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    "allowed_headers": ["Content-Type", "Authorization", "x-strapi-*"],
    "expose_headers": ["x-page-count", "x-page-number", "x-page-size", "x-total-count"]
  },
  "webhook_security": {
    "enabled": true,
    "endpoints": [
      {
        "name": "Static Site Regeneration",
        "url": "https://your-nextjs-app.com/api/revalidate",
        "events": ["entry.create", "entry.update", "entry.delete", "entry.publish", "entry.unpublish"],
        "headers": {
          "Authorization": "Bearer ${REVALIDATE_TOKEN}",
          "Content-Type": "application/json"
        }
      }
    ]
  },
  "migration_from_permissions": {
    "changes_made": [
      "Removed complex role-based permission configurations",
      "Simplified to single full access token approach",
      "Eliminated need for multiple API tokens with different permissions",
      "Streamlined content access patterns",
      "Reduced configuration complexity"
    ],
    "benefits": [
      "Faster development and deployment",
      "Fewer authentication errors",
      "Consistent API behavior",
      "Simplified troubleshooting",
      "Better performance (no permission checks per request)"
    ]
  },
  "security_recommendations": {
    "production_checklist": [
      "Ensure STRAPI_API_TOKEN is set in production environment",
      "Verify .env file is not committed to version control",
      "Enable HTTPS only",
      "Configure proper CORS origins",
      "Set up rate limiting",
      "Enable audit logging",
      "Regular security updates",
      "Configure proper database permissions",
      "Set up backup strategy",
      "Monitor API usage",
      "Implement webhook authentication",
      "Rotate API token periodically"
    ],
    "development_guidelines": [
      "Use .env.local for local development",
      "Never log or expose the API token",
      "Test API calls with proper error handling",
      "Implement fallback strategies for API failures",
      "Use environment-specific tokens for different stages"
    ]
  },
  "troubleshooting": {
    "common_issues": {
      "401_unauthorized": {
        "cause": "Missing or invalid STRAPI_API_TOKEN",
        "solution": "Check .env file and verify token in Strapi admin panel"
      },
      "403_forbidden": {
        "cause": "Token doesn't have required permissions",
        "solution": "Ensure token is set to 'Full Access' in Strapi admin"
      },
      "404_not_found": {
        "cause": "Content type or entry doesn't exist",
        "solution": "Verify content type exists and entry is published"
      },
      "500_server_error": {
        "cause": "Strapi server issue or malformed request",
        "solution": "Check Strapi logs and request format"
      }
    }
  }
}